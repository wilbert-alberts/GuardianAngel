@startuml

main -> CFG : CFG_init()
activate CFG
note right
CFG will read EEPROM.
CFG will test and remember whether 
first bytes contain magic number.
end note
CFG --> main
deactivate CFG

note over main
main will invoke other init
functions (that don't depend on
CFG)
end note

main -> ANG: ANG_init
activate ANG
ANG -> CFG: getCfgAng()
activate CFG

note over CFG
CFG will either return config
or will return false indicating
that CFG has nog config 
end note
CFG --> ANG
deactivate CFG

note over ANG
In case no config has been 
received, create and 
persist initial config.
end note

ANG -> ANG: if no config
activate ANG
ANG -> ANG: getInitialConfig
ANG -> CFG: persistConfig
activate CFG
ANG <-- CFG:
deactivate CFG
deactivate ANG
ANG -> GSM: registerReceiveCB
main <-- ANG
deactivate ANG

note over main
Initialization of GRD is 
similar to init of ANG.
Clear all data, ask CFG
for config, if not init
config and persist it.
end note

main -> GRD: GRD_init()
main <-- GRD
@enduml
